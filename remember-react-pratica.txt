# Passos para a criação do projeto
npm create vite@latest
nome do projeto
code .
npm install

# Instalando tailwindcss
npm i tailwindcss postcss autoprefixer -D
npx tailwindcss init -p
após isso ir no taiwlind.config.js e colar

/** @type {import('tailwindcss').Config} */
export default {
  content: [
    './src/**/*.tsx',
    './index.html'
  ],
  theme: {
    extend: {},
  },
  plugins: [],
}

no arquivo index.css jogar isso

@tailwind base;
@tailwind components;
@tailwind utilities;

utilizar a fonte inter do google fonts
<link rel="preconnect" href="https://fonts.googleapis.com">
<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
<link href="https://fonts.googleapis.com/css2?family=Inter:wght@100..900&display=swap" rel="stylesheet">

colocar isso no tailwind.config.js
      fontFamily: {
        sans: 'Inter, sans-serif'
      }

instalar npm i lucide-react (biblioteca de icons)
instalar tailwind-variants tailwind-merge (devido ao ui)
instalar @radix-ui/react-select (devido ao ui)


            {/* CRIAR UM ARRAY APARTIR DE UMA LENGTH ESPECIFICADA */}
            {Array.from({ length: 10 }).map((value, index) => {
              return (
                <TableRow key={index}>
                  <TableCell></TableCell>
                  <TableCell>
                    <div className="flex flex-col gap-0.5">
                      <span className="font-medium">React</span>
                      <span className="text-xs text-zinc-500">
                        9E0E95BF-4BF6-4A23-B79E-F71AE9C9C1117
                      </span>
                    </div>
                  </TableCell>
                  <TableCell className="text-zinc-500">13 video(s)</TableCell>
                  <TableCell className="text-right">
                    <Button size="icon">
                      <MoreHorizontal className="size-4" />
                    </Button>
                  </TableCell>
                </TableRow>
              );
            })}



criar uma api (server.json) e preencher com title e amountOfVideos
instalar npm i json-server -D

criar um script no package.json chamado server e preencher json-server server.json --watch --port 3333

// JSON server é um package do node.js que ajuda simular uma API / server

--watch para observar
-- port para passar a porta

instalar @tanstack/react-query
// A lib tem como objetivo lidar melhor com as requisições, cache, etc;

instalar npm react-router-dom
no main.tsx fazer uma const const router = createBrowserRouter([
  {
    path: "/",
    element: <App/>,
  },
]);
e trocar o <App /> por <RouterProvider /> passanda propriedade router={router}

no pagination usar useSearchParams

como fazer um delay
await new Promise(resolve => setTimeout(resolve, 2000)) // delay 2s

staleTime: 1000 * 60, // obsoleto

// Refetch on Focus - Recarrega as informações na tela.

instalar npm i json-server@0.17.4 -D

//  const debouncedFilter = useDebounceValue(filter, 1000);

instalar npm i @radix-ui/react-dialog

inset-0 (bot, top, left, right = 0)